{
  "resolvedId": "/home/jackshelton/dev/open-source/astro-qwik/node_modules/.pnpm/astro@3.1.0/node_modules/astro/dist/runtime/server/render/astro/instance.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isPromise } from \"../../util.js\";\nimport { renderChild } from \"../any.js\";\nimport { isAPropagatingComponent } from \"./factory.js\";\nimport { isHeadAndContent } from \"./head-and-content.js\";\nconst astroComponentInstanceSym = Symbol.for(\"astro.componentInstance\");\nclass AstroComponentInstance {\n  [astroComponentInstanceSym] = true;\n  result;\n  props;\n  slotValues;\n  factory;\n  returnValue;\n  constructor(result, props, slots, factory) {\n    this.result = result;\n    this.props = props;\n    this.factory = factory;\n    this.slotValues = {};\n    for (const name in slots) {\n      const value = slots[name](result);\n      this.slotValues[name] = () => value;\n    }\n  }\n  async init(result) {\n    if (this.returnValue !== void 0)\n      return this.returnValue;\n    this.returnValue = this.factory(result, this.props, this.slotValues);\n    return this.returnValue;\n  }\n  async render(destination) {\n    if (this.returnValue === void 0) {\n      await this.init(this.result);\n    }\n    let value = this.returnValue;\n    if (isPromise(value)) {\n      value = await value;\n    }\n    if (isHeadAndContent(value)) {\n      await value.content.render(destination);\n    } else {\n      await renderChild(destination, value);\n    }\n  }\n}\nfunction validateComponentProps(props, displayName) {\n  if (props != null) {\n    for (const prop of Object.keys(props)) {\n      if (prop.startsWith(\"client:\")) {\n        console.warn(\n          `You are attempting to render <${displayName} ${prop} />, but ${displayName} is an Astro component. Astro components do not render in the client and should not have a hydration directive. Please use a framework component for client rendering.`\n        );\n      }\n    }\n  }\n}\nfunction createAstroComponentInstance(result, displayName, factory, props, slots = {}) {\n  validateComponentProps(props, displayName);\n  const instance = new AstroComponentInstance(result, props, slots, factory);\n  if (isAPropagatingComponent(result, factory) && !result._metadata.propagators.has(factory)) {\n    result._metadata.propagators.set(factory, instance);\n  }\n  return instance;\n}\nfunction isAstroComponentInstance(obj) {\n  return typeof obj === \"object\" && !!obj[astroComponentInstanceSym];\n}\nexport {\n  AstroComponentInstance,\n  createAstroComponentInstance,\n  isAstroComponentInstance\n};\n",
      "start": 1696585309325,
      "end": 1696585309404,
      "sourcemaps": null
    },
    {
      "name": "astro:build",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "pre"
    },
    {
      "name": "astro:vite-plugin-env",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "pre"
    },
    {
      "name": "astro:jsx",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "pre"
    },
    {
      "name": "astro:content-asset-propagation",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "astro:html",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "astro:postprocess",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "astro:head-metadata",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "astro:content-imports",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1696585309404,
      "end": 1696585309404,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1696585309404,
      "end": 1696585309405,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1696585309405,
      "end": 1696585309405,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1696585309405,
      "end": 1696585309405,
      "order": "normal"
    },
    {
      "name": "astro:scripts:page-ssr",
      "start": 1696585309405,
      "end": 1696585309405,
      "order": "post"
    },
    {
      "name": "astro:scanner",
      "start": 1696585309405,
      "end": 1696585309405,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1696585309405,
      "end": 1696585309405,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1696585309405,
      "end": 1696585309405,
      "order": "normal"
    }
  ]
}
