{
  "resolvedId": "/home/jackshelton/dev/open-source/astro-qwik/node_modules/.pnpm/astro@3.1.0/node_modules/astro/dist/runtime/server/shorthash.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * shortdash - https://github.com/bibig/node-shorthash\n *\n * @license\n *\n * (The MIT License)\n *\n * Copyright (c) 2013 Bibig <bibig@me.com>\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\nconst dictionary = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY\";\nconst binary = dictionary.length;\nfunction bitwise(str) {\n  let hash = 0;\n  if (str.length === 0)\n    return hash;\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n    hash = (hash << 5) - hash + ch;\n    hash = hash & hash;\n  }\n  return hash;\n}\nfunction shorthash(text) {\n  let num;\n  let result = \"\";\n  let integer = bitwise(text);\n  const sign = integer < 0 ? \"Z\" : \"\";\n  integer = Math.abs(integer);\n  while (integer >= binary) {\n    num = integer % binary;\n    integer = Math.floor(integer / binary);\n    result = dictionary[num] + result;\n  }\n  if (integer > 0) {\n    result = dictionary[integer] + result;\n  }\n  return sign + result;\n}\nexport {\n  shorthash\n};\n",
      "start": 1696585309323,
      "end": 1696585309386,
      "sourcemaps": null
    },
    {
      "name": "astro:build",
      "start": 1696585309386,
      "end": 1696585309386,
      "order": "pre"
    },
    {
      "name": "astro:vite-plugin-env",
      "start": 1696585309386,
      "end": 1696585309386,
      "order": "pre"
    },
    {
      "name": "astro:jsx",
      "start": 1696585309386,
      "end": 1696585309386,
      "order": "pre"
    },
    {
      "name": "astro:content-asset-propagation",
      "start": 1696585309386,
      "end": 1696585309386,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1696585309386,
      "end": 1696585309387,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1696585309386,
      "end": 1696585309387,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "astro:html",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "astro:postprocess",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "astro:head-metadata",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "astro:content-imports",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1696585309387,
      "end": 1696585309387,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1696585309388,
      "end": 1696585309388,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1696585309388,
      "end": 1696585309388,
      "order": "normal"
    },
    {
      "name": "astro:scripts:page-ssr",
      "start": 1696585309388,
      "end": 1696585309388,
      "order": "post"
    },
    {
      "name": "astro:scanner",
      "start": 1696585309388,
      "end": 1696585309388,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1696585309388,
      "end": 1696585309388,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1696585309388,
      "end": 1696585309388,
      "order": "normal"
    }
  ]
}
