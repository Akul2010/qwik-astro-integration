{
  "resolvedId": "/home/jackshelton/dev/open-source/astro-qwik/node_modules/.pnpm/astro@3.1.0/node_modules/astro/dist/runtime/server/render/util.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { clsx } from \"clsx\";\nimport { HTMLString, markHTMLString } from \"../escape.js\";\nconst voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;\nconst htmlBooleanAttributes = /^(allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;\nconst htmlEnumAttributes = /^(contenteditable|draggable|spellcheck|value)$/i;\nconst svgEnumAttributes = /^(autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;\nconst STATIC_DIRECTIVES = /* @__PURE__ */ new Set([\"set:html\", \"set:text\"]);\nconst toIdent = (k) => k.trim().replace(/(?:(?!^)\\b\\w|\\s+|[^\\w]+)/g, (match, index) => {\n  if (/[^\\w]|\\s/.test(match))\n    return \"\";\n  return index === 0 ? match : match.toUpperCase();\n});\nconst toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, \"&#38;\").replace(/\"/g, \"&#34;\") : value;\nconst kebab = (k) => k.toLowerCase() === k ? k : k.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);\nconst toStyleString = (obj) => Object.entries(obj).map(([k, v]) => {\n  if (k[0] !== \"-\" && k[1] !== \"-\")\n    return `${kebab(k)}:${v}`;\n  return `${k}:${v}`;\n}).join(\";\");\nfunction defineScriptVars(vars) {\n  let output = \"\";\n  for (const [key, value] of Object.entries(vars)) {\n    output += `const ${toIdent(key)} = ${JSON.stringify(value)?.replace(\n      /<\\/script>/g,\n      \"\\\\x3C/script>\"\n    )};\n`;\n  }\n  return markHTMLString(output);\n}\nfunction formatList(values) {\n  if (values.length === 1) {\n    return values[0];\n  }\n  return `${values.slice(0, -1).join(\", \")} or ${values[values.length - 1]}`;\n}\nfunction addAttribute(value, key, shouldEscape = true) {\n  if (value == null) {\n    return \"\";\n  }\n  if (value === false) {\n    if (htmlEnumAttributes.test(key) || svgEnumAttributes.test(key)) {\n      return markHTMLString(` ${key}=\"false\"`);\n    }\n    return \"\";\n  }\n  if (STATIC_DIRECTIVES.has(key)) {\n    console.warn(`[astro] The \"${key}\" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.\n\nMake sure to use the static attribute syntax (\\`${key}={value}\\`) instead of the dynamic spread syntax (\\`{...{ \"${key}\": value }}\\`).`);\n    return \"\";\n  }\n  if (key === \"class:list\") {\n    const listValue = toAttributeString(clsx(value), shouldEscape);\n    if (listValue === \"\") {\n      return \"\";\n    }\n    return markHTMLString(` ${key.slice(0, -5)}=\"${listValue}\"`);\n  }\n  if (key === \"style\" && !(value instanceof HTMLString)) {\n    if (Array.isArray(value) && value.length === 2) {\n      return markHTMLString(\n        ` ${key}=\"${toAttributeString(`${toStyleString(value[0])};${value[1]}`, shouldEscape)}\"`\n      );\n    }\n    if (typeof value === \"object\") {\n      return markHTMLString(` ${key}=\"${toAttributeString(toStyleString(value), shouldEscape)}\"`);\n    }\n  }\n  if (key === \"className\") {\n    return markHTMLString(` class=\"${toAttributeString(value, shouldEscape)}\"`);\n  }\n  if (value === true && (key.startsWith(\"data-\") || htmlBooleanAttributes.test(key))) {\n    return markHTMLString(` ${key}`);\n  } else {\n    return markHTMLString(` ${key}=\"${toAttributeString(value, shouldEscape)}\"`);\n  }\n}\nfunction internalSpreadAttributes(values, shouldEscape = true) {\n  let output = \"\";\n  for (const [key, value] of Object.entries(values)) {\n    output += addAttribute(value, key, shouldEscape);\n  }\n  return markHTMLString(output);\n}\nfunction renderElement(name, { props: _props, children = \"\" }, shouldEscape = true) {\n  const { lang: _, \"data-astro-id\": astroId, \"define:vars\": defineVars, ...props } = _props;\n  if (defineVars) {\n    if (name === \"style\") {\n      delete props[\"is:global\"];\n      delete props[\"is:scoped\"];\n    }\n    if (name === \"script\") {\n      delete props.hoist;\n      children = defineScriptVars(defineVars) + \"\\n\" + children;\n    }\n  }\n  if ((children == null || children == \"\") && voidElementNames.test(name)) {\n    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;\n  }\n  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children}</${name}>`;\n}\nfunction renderToBufferDestination(bufferRenderFunction) {\n  const bufferChunks = [];\n  const bufferDestination = {\n    write: (chunk) => bufferChunks.push(chunk)\n  };\n  const renderPromise = bufferRenderFunction(bufferDestination);\n  return {\n    async renderToFinalDestination(destination) {\n      for (const chunk of bufferChunks) {\n        destination.write(chunk);\n      }\n      bufferDestination.write = (chunk) => destination.write(chunk);\n      await renderPromise;\n    }\n  };\n}\nexport {\n  addAttribute,\n  defineScriptVars,\n  formatList,\n  internalSpreadAttributes,\n  renderElement,\n  renderToBufferDestination,\n  toAttributeString,\n  voidElementNames\n};\n",
      "start": 1695410711356,
      "end": 1695410711419,
      "sourcemaps": null
    },
    {
      "name": "astro:build",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "pre"
    },
    {
      "name": "astro:vite-plugin-env",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "pre"
    },
    {
      "name": "astro:jsx",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "pre"
    },
    {
      "name": "astro:content-asset-propagation",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "astro:html",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "astro:postprocess",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "astro:head-metadata",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "astro:content-imports",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1695410711419,
      "end": 1695410711419,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1695410711419,
      "end": 1695410711421,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1695410711421,
      "end": 1695410711421,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1695410711421,
      "end": 1695410711421,
      "order": "normal"
    },
    {
      "name": "astro:scripts:page-ssr",
      "start": 1695410711421,
      "end": 1695410711421,
      "order": "post"
    },
    {
      "name": "astro:scanner",
      "start": 1695410711421,
      "end": 1695410711421,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1695410711421,
      "end": 1695410711421,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1695410711421,
      "end": 1695410711421,
      "order": "normal"
    }
  ]
}
