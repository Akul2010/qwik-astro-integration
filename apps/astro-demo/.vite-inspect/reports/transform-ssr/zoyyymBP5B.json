{
  "resolvedId": "/home/jackshelton/dev/open-source/astro-qwik/node_modules/.pnpm/astro@3.1.0/node_modules/astro/dist/core/render/core.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { renderPage as runtimeRenderPage } from \"../../runtime/server/index.js\";\nimport { attachCookiesToResponse } from \"../cookies/index.js\";\nimport { callEndpoint, createAPIContext } from \"../endpoint/index.js\";\nimport { callMiddleware } from \"../middleware/callMiddleware.js\";\nimport { redirectRouteGenerate, redirectRouteStatus, routeIsRedirect } from \"../redirects/index.js\";\nimport { createResult } from \"./result.js\";\nasync function renderPage({ mod, renderContext, env, cookies }) {\n  if (routeIsRedirect(renderContext.route)) {\n    return new Response(null, {\n      status: redirectRouteStatus(renderContext.route, renderContext.request.method),\n      headers: {\n        location: redirectRouteGenerate(renderContext.route, renderContext.params)\n      }\n    });\n  }\n  const Component = mod.default;\n  if (!Component)\n    throw new Error(`Expected an exported Astro component but received typeof ${typeof Component}`);\n  const result = createResult({\n    adapterName: env.adapterName,\n    links: renderContext.links,\n    styles: renderContext.styles,\n    logger: env.logger,\n    params: renderContext.params,\n    pathname: renderContext.pathname,\n    componentMetadata: renderContext.componentMetadata,\n    resolve: env.resolve,\n    renderers: env.renderers,\n    clientDirectives: env.clientDirectives,\n    compressHTML: env.compressHTML,\n    request: renderContext.request,\n    site: env.site,\n    scripts: renderContext.scripts,\n    ssr: env.ssr,\n    status: renderContext.status ?? 200,\n    cookies,\n    locals: renderContext.locals ?? {}\n  });\n  if (mod.frontmatter && typeof mod.frontmatter === \"object\" && \"draft\" in mod.frontmatter) {\n    env.logger.warn(\n      \"astro\",\n      `The drafts feature is deprecated and used in ${renderContext.route.component}. You should migrate to content collections instead. See https://docs.astro.build/en/guides/content-collections/#filtering-collection-queries for more information.`\n    );\n  }\n  const response = await runtimeRenderPage(\n    result,\n    Component,\n    renderContext.props,\n    null,\n    env.streaming,\n    renderContext.route\n  );\n  if (result.cookies) {\n    attachCookiesToResponse(response, result.cookies);\n  }\n  return response;\n}\nasync function tryRenderRoute(renderContext, env, mod, onRequest) {\n  const apiContext = createAPIContext({\n    request: renderContext.request,\n    params: renderContext.params,\n    props: renderContext.props,\n    site: env.site,\n    adapterName: env.adapterName\n  });\n  switch (renderContext.route.type) {\n    case \"page\":\n    case \"redirect\": {\n      if (onRequest) {\n        return await callMiddleware(\n          env.logger,\n          onRequest,\n          apiContext,\n          () => {\n            return renderPage({\n              mod,\n              renderContext,\n              env,\n              cookies: apiContext.cookies\n            });\n          }\n        );\n      } else {\n        return await renderPage({\n          mod,\n          renderContext,\n          env,\n          cookies: apiContext.cookies\n        });\n      }\n    }\n    case \"endpoint\": {\n      const result = await callEndpoint(\n        mod,\n        env,\n        renderContext,\n        onRequest\n      );\n      return result;\n    }\n    default:\n      throw new Error(`Couldn't find route of type [${renderContext.route.type}]`);\n  }\n}\nexport {\n  renderPage,\n  tryRenderRoute\n};\n",
      "start": 1695410711116,
      "end": 1695410711174,
      "sourcemaps": null
    },
    {
      "name": "astro:build",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "pre"
    },
    {
      "name": "astro:vite-plugin-env",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "pre"
    },
    {
      "name": "astro:jsx",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "pre"
    },
    {
      "name": "astro:content-asset-propagation",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "pre"
    },
    {
      "name": "vite-plugin-qwik",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "astro:html",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "astro:postprocess",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "astro:head-metadata",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "astro:content-imports",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1695410711174,
      "end": 1695410711174,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1695410711174,
      "end": 1695410711175,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1695410711175,
      "end": 1695410711175,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1695410711175,
      "end": 1695410711175,
      "order": "normal"
    },
    {
      "name": "astro:scripts:page-ssr",
      "start": 1695410711175,
      "end": 1695410711175,
      "order": "post"
    },
    {
      "name": "astro:scanner",
      "start": 1695410711175,
      "end": 1695410711175,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1695410711175,
      "end": 1695410711175,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1695410711175,
      "end": 1695410711175,
      "order": "normal"
    }
  ]
}
